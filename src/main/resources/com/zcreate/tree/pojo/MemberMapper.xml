<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zcreate.tree.dao.MemberMapper">
    <cache eviction="LRU" readOnly="true" flushInterval="86400000" size="10000"/>

    <resultMap id="MemberResult" type="com.zcreate.tree.pojo.Member">
        <result column="member_id" jdbcType="INTEGER" property="memberId"/>
        <result column="member_no" jdbcType="VARCHAR" property="memberNo"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="member_info" jdbcType="VARCHAR" property="memberInfo"/>

    </resultMap>

    <sql id="queryUserWhere">
        <where>
            <if test="@com.zcreate.Ognl@isNotEmpty(param.memberNo)">AND member_no = #{param.memberNo:VARCHAR}</if>
            <if test="@com.zcreate.Ognl@isNotEmpty(param.userName)">AND user_name = #{param.userName:VARCHAR}</if>
            <if test="@com.zcreate.Ognl@isNotEmpty(param.realName)">AND real_name = #{param.realName:VARCHAR}</if>
            <!--<if test="@com.zcreate.Ognl@isNotEmpty(param.borrower)">AND member_no in (SELECT member_id FROM member A join (select distinct memberNo from touzi where 借款用户 in
                (select user_name from member where real_name=#{param.borrower:VARCHAR})) B on A.member_no=B.memberNo)
            </if>
            <if test="@com.zcreate.Ognl@isNotEmpty(param.investor)">AND member_no in ( select memberNo from biaodi where 投资人 like '%${param.investor}%')</if>
            <if test="@com.zcreate.Ognl@isNotEmpty(param.cooperative)">AND member_no in ( select memberNo from biaodi where 合作机构 like '%${param.cooperative}%')</if>-->
            <if test="@com.zcreate.Ognl@isNotEmpty(param.phone)">AND phone = #{param.phone:VARCHAR}</if>
            <if test="@com.zcreate.Ognl@isNotEmpty(param.idCard)">AND id_card = #{param.idCard:VARCHAR}</if>
        </where>
    </sql>
    <select id="getMemberCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*) FROM member
        <include refid="queryUserWhere"/>
    </select>
    <select id="selectMember" resultMap="MemberResult" parameterType="java.util.Map" useCache="true">
        SELECT member_id,member_no,user_name,real_name,id_card,phone,email,member_info FROM member
        <include refid="queryUserWhere"/>
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
        </choose>
    </select>
    <!-- 标的信息 -->
    <select id="getOrderCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*)
        FROM gcy_v3.order_list
        where buyer_id = #{param.buyer_id:INTEGER}
    </select>
    <select id="selectOrder" resultType="java.util.Map" parameterType="java.util.Map" useCache="true">
        select a.order_no 订单号,a.buyer_id 买家编号,f.real_name 真实姓名,FROM_UNIXTIME(a.create_time)下单时间,a.state 订单状态,b.id 子订单编号,b.vendor_id 商家编号,g.company_name 公司名称 ,b.shop_id 店铺编号,
        e.name 商店名称,b.item_amount 商品总价,b.final_amount 订单最终金额,b.state 子订单状态 ,c.item_id 商品编号,c.title 商品名称,c.price 商品单价,c.quantity 销售数量,c.final_amount 商品实际金额,
        d.consignee_person 收货人姓名,d.consignee_phone 收货人电话,d.shipping_address 收货人地址
        from gcy_v3.order_list a
        inner join gcy_v3.sale_sub_order b on a.id=b.order_id
        left join (select a.order_id,GROUP_CONCAT(item_id) item_id,GROUP_CONCAT(title) title,GROUP_CONCAT(quantity) quantity,GROUP_CONCAT(price) price,GROUP_CONCAT(final_amount)
        final_amount
        from gcy_v3.sale_order_item a,gcy_v3.item_info b where a.item_id=b.id group by a.order_id ) c on b.id=c.order_id
        left join gcy_v3.sale_order d on a.id=d.order_id
        left join gcy_v3.mm_trusted_info f on a.buyer_id =f.member_id
        left join gcy_v3.mch_enterprise_info g on b.vendor_id =g.mch_id
        left join gcy_v3.mch_shop e on b.shop_id=e.id
        <where>
            b.is_paid =1
            <if test="@com.zcreate.Ognl@isNotEmpty(param.memberNo)">and a.buyer_id= #{param.memberNo:INTEGER}</if>
        </where>
        limit 100;
    </select>
    <!--充值记录-->
    <select id="getDepositCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*)
        from ppi_log a
        WHERE type in(2,6) AND (title  LIKE '%wechat%' or title  LIKE '%alipay%' or
        title  LIKE '%ICBC%' or title LIKE '现金%' or title  LIKE '%积分充值%' or title like '冲正原交易%') and integral &lt; 1000000
        and a.member_id = #{param.memberNo:INTEGER}
    </select>
    <select id="selectDeposit" resultType="java.util.Map" parameterType="java.util.Map" useCache="true">
        select a.member_id 会员id,c.name 用户名 ,c.phone 手机号码,d.real_name 真实姓名,d.card_id 证件号码,e.account 银行卡号,a.title 标题 ,case a.type when 2 then '人工充值' when 6 then '自动充值' end 类型 ,a.integral 积分,FROM_UNIXTIME(a.create_time) 充值时间
        from ppi_log a
        left join gcy_v3.mm_profile c on a.member_id=c.member_id
        left join gcy_v3.mm_trusted_info d on a.member_id=d.member_id
        left join gcy_v3.mm_bank e on a.member_id=e.member_id
        WHERE type in(2,6) AND (title LIKE '%wechat%' or title LIKE '%alipay%' or
        title LIKE '%ICBC%' or title LIKE '现金%' or title LIKE '%积分充值%' or title like '冲正原交易%') and integral &lt; 1000000
        and a.member_id = #{param.memberNo:INTEGER}
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
        </choose>
    </select>

    <!--提现记录-->
    <select id="getWithdrawCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*)
        from gcy_v3.mm_wallet_log a
        where a.kind in(12,13) and a.state>=3 and a.member_id=#{param.memberNo:INTEGER}
    </select>
    <select id="selectWithdraw" resultType="java.util.Map" parameterType="java.util.Map" useCache="true">
        select a.member_id 会员id,c.name 用户名 ,c.phone 手机号码,d.real_name 真实姓名,d.card_id 证件号码,e.account 银行卡号,a.title 标题,
        case a.kind when 12 then '提现到银行卡'  when 13 then '提现到第三方账户' end 业务类型,a.amount 金额 ,a.csn_fee 手续费,a.remark 备注,FROM_UNIXTIME(a.create_time) 提现时间
        from gcy_v3.mm_wallet_log a
        left join gcy_v3.mm_profile c on a.member_id=c.member_id
        left join gcy_v3.mm_trusted_info d on a.member_id=d.member_id
        left join gcy_v3.mm_bank e on  a.member_id=e.member_id
        where a.kind in(12,13) and a.state>=3 and a.member_id=#{param.memberNo:INTEGER}
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
        </choose>
    </select>
    <!--还款记录-->
    <select id="getRepaymentCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*)
        FROM huankuan
        where 用户id = #{param.memberNo:INTEGER}
    </select>
    <select id="selectRepayment" resultType="java.util.Map" parameterType="java.util.Map" useCache="true">
        SELECT 用户id,用户名,真实姓名,电话号码,邮箱账号,身份证号码,ifnull(绑定的银行卡号,'')绑定的银行卡号,微商银行账号,资金总额,应还本金,应还利息,剩余还款金额,`收款期数/总期数`,
        要求还款时间,借款人实际还款时,交易状况,状态 FROM huankuan
        where 用户id = #{param.memberNo:INTEGER}
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
        </choose>
    </select>
    <!--回款记录-->
    <select id="getStockCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*)
        from gq1_quota_log a  inner join gq1_account b on a.account_id=b.id
        where  b.member_id= #{param.memberNo:INTEGER}
    </select>
    <select id="selectStock" resultType="java.util.Map" parameterType="java.util.Map" useCache="true">
        select b.member_id 会员id,c.name 用户名 ,c.phone 手机号码,d.real_name 真实姓名,d.card_id 证件号码,e.account 银行卡号,b.project_id 项目编号, f.`name` 项目名称,a.quota 原始股数量, a.unit_amount 原始股单价,case when  a.kind in(1,4,5,6)  then '客服股权充入、积分转股权、赠送股权等' when a.kind in(2,3) then '购买股权' when a.kind =7 then '份额赠送' end '类型',a.title 标题,FROM_UNIXTIME(a.create_time) 创建时间
        from gq1_quota_log a
        inner join gq1_account b on a.account_id=b.id
        left join gq1_project f on b.project_id=f.id
        left join gcy_v3.mm_profile c on b.member_id=c.member_id
        left join gcy_v3.mm_trusted_info d on b.member_id=d.member_id
        left join gcy_v3.mm_bank e on  b.member_id=e.member_id
        where b.member_id= #{param.memberNo:INTEGER}
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
        </choose>
    </select>
    <!--投资记录-->
    <select id="getInvestmentCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*)
        FROM ppi_order
        where member_id = #{param.memberNo:INTEGER}
    </select>
    <select id="selectInvestment" resultType="java.util.Map" parameterType="java.util.Map" useCache="true">
        select a.member_id 会员id,c.name 用户名 ,c.phone 手机号码,d.real_name 真实姓名,d.card_id 证件号码,e.account 银行卡号,a.item_id 项目id,b.title 项目名称,a.buy_quota 购买份额,
        a.price 购买单价,a.buy_quota*a.price 购买积分,b.rate 赠送比例,a.buy_quota*a.price*b.rate 赠送积分,a.buy_quota*a.price + a.buy_quota*a.price*b.rate 结算积分,
        FROM_UNIXTIME(a.begin_time) 购买时间,FROM_UNIXTIME(a.end_time) 结算时间
        from ppi_order a
        left join ppi_item b on a.item_id=b.id
        left join gcy_v3.mm_profile c on a.member_id=c.member_id
        left join gcy_v3.mm_trusted_info d on a.member_id=d.member_id
        left join gcy_v3.mm_bank e on a.member_id=e.member_id
        <where>
            is_refund=0
            <if test="@com.zcreate.Ognl@isNotEmpty(param.memberNo)">and A.member_id= #{param.memberNo:INTEGER}</if>
        </where>
        order by a.end_time
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
        </choose>
    </select>
    <!--资金流水-->
    <select id="getFundsCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*)
        FROM ppi_log
        where member_id = #{param.memberNo:INTEGER}
    </select>
    <select id="selectFunds" resultType="java.util.Map" parameterType="java.util.Map" useCache="true">
        select a.member_id 会员id,c.name 用户名 ,c.phone 手机号码,d.real_name 真实姓名,d.card_id 证件号码,e.account 银行卡号,a.title 标题 ,case a.type when 4 then '积分转创业金' end 类型 ,a.integral*-1 创业金,FROM_UNIXTIME(a.create_time) 创建时间
        from ppi_log a
        left join gcy_v3.mm_profile c on a.member_id=c.member_id
        left join gcy_v3.mm_trusted_info d on a.member_id=d.member_id
        left join gcy_v3.mm_bank e on a.member_id=e.member_id
        where a.type =4 and a.member_id= #{param.memberNo:INTEGER}
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
        </choose>
    </select>
</mapper>